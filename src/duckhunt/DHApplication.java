/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DHApplication.java
 *
 * Created on 7.3.2009, 13:09:22
 */

package duckhunt;

/**
 *
 * @author Peter
 */
public class DHApplication extends javax.swing.JFrame implements Runnable{
    private Game game=null;
    private Thread gameChecker=null;
    private boolean shotEnabled=true;
    private gameFramework.MidiSound introSound=null;

    /** Creates new form DHApplication */
    public DHApplication() {
        initComponents();

        gameChecker = new Thread(this);
        gameChecker.start();

        setTopScore();

        try{
            introSound = new gameFramework.MidiSound("/sounds/intro.mid");
            introSound.play();
        }catch(Exception e){
            System.out.println("error!!!s");
        }
    }

    /// correct top score label
    private void setTopScore(){
        TopScore top=new TopScore();

        topScoreLabel.setText("Top Score = " + Long.toString(top.getTop()));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gamePanel = new javax.swing.JPanel();
        titleImage = new javax.swing.JLabel();
        topScoreLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        gameMenu = new javax.swing.JMenu();
        start1Duck = new javax.swing.JMenuItem();
        start2Ducks = new javax.swing.JMenuItem();
        separator1 = new javax.swing.JSeparator();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Duck Hunt");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setName("mainFrame"); // NOI18N
        setResizable(false);

        gamePanel.setBackground(new java.awt.Color(0, 0, 0));
        gamePanel.setName("gamePanel"); // NOI18N
        gamePanel.setPreferredSize(new java.awt.Dimension(512, 448));
        gamePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseClick(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                gamePanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                gamePanelMouseReleased(evt);
            }
        });

        titleImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/title.png"))); // NOI18N

        topScoreLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        topScoreLabel.setForeground(new java.awt.Color(0, 255, 0));
        topScoreLabel.setText("Top score = ");

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(topScoreLabel))
                    .addComponent(titleImage))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addComponent(titleImage, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(topScoreLabel)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        menuBar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                menuFocusGained(evt);
            }
        });

        gameMenu.setText("Game");

        start1Duck.setText("Start 1 duck");
        start1Duck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start1DuckActionPerformed(evt);
            }
        });
        gameMenu.add(start1Duck);

        start2Ducks.setText("Start 2 ducks");
        start2Ducks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start2DuckActionPerformed(evt);
            }
        });
        gameMenu.add(start2Ducks);
        gameMenu.add(separator1);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        gameMenu.add(exitMenuItem);

        menuBar.add(gameMenu);

        helpMenu.setText("Help");

        aboutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAboutButton(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void start1DuckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start1DuckActionPerformed
        if( game == null)
            try{
                game = new Game(gamePanel, 1);
                game.start();
                disableMenu();
            }catch(java.io.IOException e){
                System.out.println("Can't load screen");
            }
        else{
            game.stop();
            game = null;
            start1DuckActionPerformed(evt);
        }
}//GEN-LAST:event_start1DuckActionPerformed

    private void menuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_menuFocusGained
    }//GEN-LAST:event_menuFocusGained

    private void start2DuckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start2DuckActionPerformed
        if( game == null )
            try{
                game = new Game(gamePanel, 2);
                game.start();
                disableMenu();
            }catch(java.io.IOException e){
                System.out.println("Can't load screen");
            }
        else{
            game.stop();
            game = null;
            start1DuckActionPerformed(evt);
        }
    }//GEN-LAST:event_start2DuckActionPerformed

    private void mouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClick

    }//GEN-LAST:event_mouseClick

    private void onAboutButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onAboutButton
        (new AboutDialog(this, true)).setVisible(true);
}//GEN-LAST:event_onAboutButton

    private void gamePanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gamePanelMousePressed
        if(game != null && shotEnabled)
            game.shot(evt.getX(), evt.getY());
        shotEnabled = false;
    }//GEN-LAST:event_gamePanelMousePressed

    private void gamePanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gamePanelMouseReleased
        shotEnabled = true;
    }//GEN-LAST:event_gamePanelMouseReleased

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        try{
            javax.swing.UIManager.setLookAndFeel(
                    javax.swing.UIManager.getSystemLookAndFeelClassName());
        }catch(Exception e){
            System.out.println("Error during setLookAndFeel");
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DHApplication().setVisible(true);
            }
        });
    }

    /// disable all menu
    private void disableMenu(){
        helpMenu.setEnabled(false);
        gameMenu.setEnabled(false);
        titleImage.setVisible(false);
        topScoreLabel.setVisible(false);
        introSound.stop();
    }

    /// enable all menu
    private void enableMenu(){
        helpMenu.setEnabled(true);
        gameMenu.setEnabled(true);
        titleImage.setVisible(true);
        topScoreLabel.setVisible(true);
        gamePanel.repaint();
        setTopScore();
        introSound.play();
    }

    /**
     * thread waiting for game end
     */
    public void run(){
        while(true)
            if( game!= null)
                if( game.done() ){
                    TopScore top = new TopScore();
                    top.addTop(game.getScore());
                    game.stop();
                    game = null;
                    enableMenu();                    
                }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu gameMenu;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JSeparator separator1;
    private javax.swing.JMenuItem start1Duck;
    private javax.swing.JMenuItem start2Ducks;
    private javax.swing.JLabel titleImage;
    private javax.swing.JLabel topScoreLabel;
    // End of variables declaration//GEN-END:variables

}
